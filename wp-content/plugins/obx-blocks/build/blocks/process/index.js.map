{"version":3,"file":"blocks/process/index.js","mappings":"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","sources":["webpack://obx-blocks/./node_modules/@wordpress/icons/build-module/library/plus.js","webpack://obx-blocks/./src/blocks/process/edit.js","webpack://obx-blocks/./src/blocks/process/editor.scss?cbb7","webpack://obx-blocks/./src/blocks/process/index.js","webpack://obx-blocks/./src/blocks/process/style.scss?1cb5","webpack://obx-blocks/external window [\"wp\",\"blockEditor\"]","webpack://obx-blocks/external window [\"wp\",\"blocks\"]","webpack://obx-blocks/external window [\"wp\",\"components\"]","webpack://obx-blocks/external window [\"wp\",\"element\"]","webpack://obx-blocks/external window [\"wp\",\"i18n\"]","webpack://obx-blocks/external window [\"wp\",\"primitives\"]","webpack://obx-blocks/external window \"React\"","webpack://obx-blocks/webpack/bootstrap","webpack://obx-blocks/webpack/runtime/chunk loaded","webpack://obx-blocks/webpack/runtime/compat get default export","webpack://obx-blocks/webpack/runtime/define property getters","webpack://obx-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://obx-blocks/webpack/runtime/make namespace object","webpack://obx-blocks/webpack/runtime/jsonp chunk loading","webpack://obx-blocks/webpack/before-startup","webpack://obx-blocks/webpack/startup","webpack://obx-blocks/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst plus = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M11 12.5V17.5H12.5V12.5H17.5V11H12.5V6H11V11H6V12.5H11Z\"\n}));\nexport default plus;\n//# sourceMappingURL=plus.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    RichText,\n    InspectorControls,\n    ColorPalette,\n    MediaUpload,\n    MediaUploadCheck,\n    BlockControls,\n    BlockAlignmentToolbar,\n    AlignmentToolbar,\n    URLInputButton,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    Button,\n    TextControl,\n    BaseControl,\n    RangeControl,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { plus, trash } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport './editor.scss';\n\n/**\n * Edit function for the Process block\n */\nexport default function Edit({ attributes, setAttributes }) {\n    const {\n        tagline,\n        heading,\n        steps,\n        ctaText,\n        ctaUrl,\n        imageUrl,\n        imageId,\n        imageAlt,\n        backgroundColor,\n        textColor,\n        accentColor,\n        align,\n        textAlign,\n    } = attributes;\n\n    const [activeStep, setActiveStep] = useState(null);\n\n    const blockProps = useBlockProps({\n        className: `obx-process align${align || 'none'} text-${textAlign || 'center'}`,\n        style: {\n            backgroundColor,\n            color: textColor,\n        },\n    });\n\n    const addStep = () => {\n        const newSteps = [...steps];\n        const newNumber = newSteps.length + 1;\n        newSteps.push({\n            id: `step-${Date.now()}`,\n            number: newNumber.toString(),\n            title: '',\n            description: '',\n        });\n        setAttributes({ steps: newSteps });\n    };\n\n    const removeStep = (index) => {\n        const newSteps = [...steps];\n        newSteps.splice(index, 1);\n        \n        // Update the numbers of remaining steps\n        newSteps.forEach((step, i) => {\n            step.number = (i + 1).toString();\n        });\n        \n        setAttributes({ steps: newSteps });\n        setActiveStep(null);\n    };\n\n    const updateStep = (index, property, value) => {\n        const newSteps = [...steps];\n        newSteps[index] = {\n            ...newSteps[index],\n            [property]: value,\n        };\n        setAttributes({ steps: newSteps });\n    };\n\n    return (\n        <>\n            <BlockControls>\n                <BlockAlignmentToolbar\n                    value={align}\n                    onChange={(newAlign) => setAttributes({ align: newAlign })}\n                    controls={['wide', 'full']}\n                />\n                <AlignmentToolbar\n                    value={textAlign}\n                    onChange={(newAlign) => setAttributes({ textAlign: newAlign })}\n                />\n            </BlockControls>\n            \n            <InspectorControls>\n                <PanelBody title={__('Process Settings', 'obx-blocks')}>\n                    <BaseControl label={__('Process Image', 'obx-blocks')}>\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={(media) => {\n                                    setAttributes({\n                                        imageUrl: media.url,\n                                        imageId: media.id,\n                                        imageAlt: media.alt || '',\n                                    });\n                                }}\n                                allowedTypes={['image']}\n                                value={imageId}\n                                render={({ open }) => (\n                                    <div className=\"editor-post-featured-image\">\n                                        <Button\n                                            className={imageId ? 'editor-post-featured-image__preview' : 'editor-post-featured-image__toggle'}\n                                            onClick={open}\n                                        >\n                                            {imageId ? (\n                                                <img \n                                                    src={imageUrl} \n                                                    alt={imageAlt} \n                                                    style={{ maxWidth: '100%', maxHeight: '200px' }}\n                                                />\n                                            ) : (\n                                                __('Set process image', 'obx-blocks')\n                                            )}\n                                        </Button>\n                                        {imageId && (\n                                            <Button\n                                                onClick={() => {\n                                                    setAttributes({\n                                                        imageUrl: '',\n                                                        imageId: 0,\n                                                        imageAlt: '',\n                                                    });\n                                                }}\n                                                isDestructive\n                                            >\n                                                {__('Remove image', 'obx-blocks')}\n                                            </Button>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </MediaUploadCheck>\n                    </BaseControl>\n                    \n                    <TextControl\n                        label={__('CTA Button Text', 'obx-blocks')}\n                        value={ctaText}\n                        onChange={(value) => setAttributes({ ctaText: value })}\n                    />\n                    \n                    <BaseControl label={__('CTA Button URL', 'obx-blocks')}>\n                        <URLInputButton\n                            url={ctaUrl}\n                            onChange={(url) => setAttributes({ ctaUrl: url })}\n                        />\n                    </BaseControl>\n                    \n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Background Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={backgroundColor}\n                            onChange={(color) => setAttributes({ backgroundColor: color })}\n                        />\n                    </div>\n                    \n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Text Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={textColor}\n                            onChange={(color) => setAttributes({ textColor: color })}\n                        />\n                    </div>\n                    \n                    <div className=\"components-base-control\">\n                        <label className=\"components-base-control__label\">\n                            {__('Accent Color', 'obx-blocks')}\n                        </label>\n                        <ColorPalette\n                            value={accentColor}\n                            onChange={(color) => setAttributes({ accentColor: color })}\n                        />\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <div className=\"obx-process__container\">\n                    <div className=\"obx-process__header\" style={{ textAlign }}>\n                        <RichText\n                            tagName=\"div\"\n                            className=\"obx-process__tagline\"\n                            value={tagline}\n                            onChange={(value) => setAttributes({ tagline: value })}\n                            placeholder={__('OUR PROCESS', 'obx-blocks')}\n                        />\n                        <RichText\n                            tagName=\"h2\"\n                            className=\"obx-process__heading\"\n                            value={heading}\n                            onChange={(value) => setAttributes({ heading: value })}\n                            placeholder={__('Your path to paid search excellence starts here!', 'obx-blocks')}\n                            style={{ \n                                backgroundImage: accentColor ? `linear-gradient(transparent 60%, ${accentColor} 60%)` : 'none' \n                            }}\n                        />\n                    </div>\n                    \n                    <div className=\"obx-process__content\">\n                        <div className=\"obx-process__steps\">\n                            {steps.map((step, index) => (\n                                <div \n                                    key={step.id} \n                                    className={`obx-process__step ${activeStep === index ? 'is-selected' : ''}`}\n                                    onClick={() => setActiveStep(index)}\n                                >\n                                    <div \n                                        className=\"obx-process__step-number\"\n                                        style={{ backgroundColor: accentColor }}\n                                    >\n                                        {step.number}\n                                    </div>\n                                    <div className=\"obx-process__step-content\">\n                                        <RichText\n                                            tagName=\"h3\"\n                                            className=\"obx-process__step-title\"\n                                            value={step.title}\n                                            onChange={(value) => updateStep(index, 'title', value)}\n                                            placeholder={__('Step Title', 'obx-blocks')}\n                                            allowedFormats={['core/bold', 'core/italic']}\n                                        />\n                                        <RichText\n                                            tagName=\"div\"\n                                            className=\"obx-process__step-description\"\n                                            value={step.description}\n                                            onChange={(value) => updateStep(index, 'description', value)}\n                                            placeholder={__('Step description...', 'obx-blocks')}\n                                            allowedFormats={['core/bold', 'core/italic', 'core/link']}\n                                        />\n                                        <div className=\"obx-process__step-actions\">\n                                            <Button\n                                                isDestructive\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    removeStep(index);\n                                                }}\n                                                className=\"obx-process__step-remove\"\n                                            >\n                                                {__('Remove Step', 'obx-blocks')}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                            \n                            <Button\n                                className=\"obx-process__add-button\"\n                                icon={plus}\n                                onClick={addStep}\n                            >\n                                {__('Add Step', 'obx-blocks')}\n                            </Button>\n                        </div>\n                        \n                        <div className=\"obx-process__image-container\">\n                            {imageUrl ? (\n                                <img \n                                    src={imageUrl} \n                                    alt={imageAlt} \n                                    className=\"obx-process__image\"\n                                />\n                            ) : (\n                                <div className=\"obx-process__image-placeholder\">\n                                    <MediaUploadCheck>\n                                        <MediaUpload\n                                            onSelect={(media) => {\n                                                setAttributes({\n                                                    imageUrl: media.url,\n                                                    imageId: media.id,\n                                                    imageAlt: media.alt || '',\n                                                });\n                                            }}\n                                            allowedTypes={['image']}\n                                            value={imageId}\n                                            render={({ open }) => (\n                                                <Button\n                                                    onClick={open}\n                                                    className=\"obx-process__image-button\"\n                                                >\n                                                    {__('Add Process Image', 'obx-blocks')}\n                                                </Button>\n                                            )}\n                                        />\n                                    </MediaUploadCheck>\n                                </div>\n                            )}\n                            \n                            {ctaText && (\n                                <div className=\"obx-process__cta-container\">\n                                    <RichText\n                                        tagName=\"a\"\n                                        className=\"obx-process__cta-button\"\n                                        value={ctaText}\n                                        onChange={(value) => setAttributes({ ctaText: value })}\n                                        placeholder={__('Call to Action', 'obx-blocks')}\n                                        style={{ \n                                            backgroundColor: '#000',\n                                            color: '#fff',\n                                            borderRadius: '50px',\n                                            padding: '12px 24px',\n                                            display: 'inline-block',\n                                            textDecoration: 'none',\n                                        }}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n} ","// extracted by mini-css-extract-plugin\nexport {};","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\nimport './style.scss';\n\n/**\n * Register the block\n */\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save: () => null, // Server-side rendering with render.php\n}); ","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/process/index\": 0,\n\t\"blocks/process/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkobx_blocks\"] = globalThis[\"webpackChunkobx_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/process/style-index\"], () => (__webpack_require__(\"./src/blocks/process/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","InspectorControls","ColorPalette","MediaUpload","MediaUploadCheck","BlockControls","BlockAlignmentToolbar","AlignmentToolbar","URLInputButton","PanelBody","Button","TextControl","BaseControl","RangeControl","useState","plus","trash","Edit","attributes","setAttributes","tagline","heading","steps","ctaText","ctaUrl","imageUrl","imageId","imageAlt","backgroundColor","textColor","accentColor","align","textAlign","activeStep","setActiveStep","blockProps","className","style","color","addStep","newSteps","newNumber","length","push","id","Date","now","number","toString","title","description","removeStep","index","splice","forEach","step","i","updateStep","property","value","createElement","Fragment","onChange","newAlign","controls","label","onSelect","media","url","alt","allowedTypes","render","open","onClick","src","maxWidth","maxHeight","isDestructive","tagName","placeholder","backgroundImage","map","key","allowedFormats","e","stopPropagation","icon","borderRadius","padding","display","textDecoration","registerBlockType","metadata","name","edit","save"],"sourceRoot":""}